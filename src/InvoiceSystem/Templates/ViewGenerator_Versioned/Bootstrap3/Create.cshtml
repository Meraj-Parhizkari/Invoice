@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:

@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }


@:<div class="Col-12">
    @:<div class="card">
    @:<div class="card-header">
    <h3>
    <b>ایجاد</b>
    </h3>
    <hr />
    @:</div>
    @:<div class="card-content">
    @:<div class="px-3">
        @:<form asp-action="@Model.ViewName">
            @:<div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @:<div class="form-body">
    @:<div class="row">
        foreach (var property in Model.ModelMetadata.Properties)
        {
            if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly)
            {
                if (property.IsForeignKey)
                {
                @:<div class="col-md-4">
            @:<div class="form-group">
                @:<label asp-for="@property.PropertyName" class="control-label"></label>
                @:<select asp-for="@property.PropertyName" class ="form-control" asp-items="ViewBag.@property.PropertyName"></select>
            @:</div>
    @:</div>
                    continue;
                }

                bool isCheckbox = property.TypeName.Equals("System.Boolean");
                if (isCheckbox)
                {
          @:<div class="col-md-4">
            @:<div class="form-group">
                @:<div class="checkbox">
                    @:<label>
                        @:<input asp-for="@property.PropertyName" /> @@Html.DisplayNameFor(model => model.@GetValueExpression(property))
                    @:</label>
                @:</div>
            @:</div>
          @:</div>
                }
                else if (property.IsEnum && !property.IsEnumFlags)
                {
           @:<div class="col-md-4">
            @:<div class="form-group">
                @:<label asp-for="@property.PropertyName" class="control-label"></label>
                @:<select asp-for="@property.PropertyName" class="form-control"></select>
                @:<span asp-validation-for="@property.PropertyName" class="text-danger"></span>
            @:</div>
           @:</div>
                }
                else if (property.IsMultilineText)
                {
           @:<div class="col-md-4">
            @:<div class="form-group">
                @:<label asp-for="@property.PropertyName" class="control-label"></label>
                @:<textarea asp-for="@property.PropertyName" class="form-control"></textarea>
                @:<span asp-validation-for="@property.PropertyName" class="text-danger"></span>
            @:</div>
           @:</div>
                }
                else
                {
           @:<div class="col-md-4">
            @:<div class="form-group">
                @:<label asp-for="@property.PropertyName" class="control-label"></label>
                @:<input asp-for="@property.PropertyName" class="form-control" />
                @:<span asp-validation-for="@property.PropertyName" class="text-danger"></span>
            @:</div>
           @:</div>
                }
            }
        }
        }
    </div>
              <div class="form-actions right">
        <button type="submit" class="btn btn-raised btn-primary">
            <i class="fa fa-check-square-o"></i> ذخیره
        </button>
        <a asp-action="Index" class="btn btn-raised btn-warning"><i class="ft-x"></i>بازگشت</a>
    
    </div>
    </div>

        </form>
    </div>
</div>
    </div>
    </div>



@{
    if (Model.ReferenceScriptLibraries)
    {
@:@@section Scripts {
    @:@@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
@:}
    }
    // The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
@:</body>
@:</html>
    }
}
@functions
{
    // Do we need to use this in conjunction with the PrimaryKey check?
    bool IsPropertyGuid(IPropertyMetadata property)
    {
        return string.Equals("System.Guid", property.TypeName, StringComparison.OrdinalIgnoreCase);
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }
}